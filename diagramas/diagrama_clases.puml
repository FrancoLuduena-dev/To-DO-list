@startuml diagrama clases
title TO DO list

interface Builder #Thistle;header:444 {
    reset(): void;
    setTitulo(titulo: string): this;
    setDescripcion(descripcion: string): this;
    setFechaCreacion(fechaCreacion: Date): this;
    setFechaVencimiento(fechaVencimiento: Date): this;
    setFechaFinalizacion(fechaFinalizacion: Date): this;
    setPrioridad(prioridad: prioridad): this;
    setCategoria(categoria: categoria): this;
    setEtiquetas(etiquetas: string[]): this;
    construirTarea(): Tarea;
}

class Tarea #TECHNOLOGY;header:444{
    - titulo: string;
    - descripcion: string;
    - fechaCreacion: Date;
    - fechaVencimiento: Date| null;
    - fechaFinalizacion: Date | null;
    - prioridad: prioridad | null ;
    - completado: boolean;
    - porcentajeAvance: number;
    - categoria: categoria | null;
    - etiqueta: string[];
    + setters y getters()
    + agregarEtiqueta(etiqueta: string): void;
    + borrarEtiqueta(etiqueta: string): string | void;
}

class ConstructorTarea #TECHNOLOGY;header:444 implements Builder {
    - tarea: Tarea;
    +reset(): void ;
    +setTitulo(titulo: string): this ;
    +setDescripcion(descripcion: string): this ;
    +setFechaCreacion(fechaCreacion: Date): this ;
    +setFechaVencimiento(fechaVencimiento: Date): this ;
    +setFechaFinalizacion(fechaFinalizacion: Date): this ;
    +setPrioridad(prioridad: prioridad): this ;
    +setCompletado(completado: boolean): this ;
    +setPorcentajeAvance(porcentajeAvance: number): this ;
    +setCategoria(categoria: categoria): this ;
    +setEtiquetas(etiquetas: string[]): this ;
    +construirTarea(): Tarea;
}

class Director #TECHNOLOGY;header:444 {
    - builder: Builder;
    + setBuilder(builder: Builder): void;
    + construirTarea(configurar: () => void): Tarea;
}

class ModificadorTarea #TECHNOLOGY;header:444{
    - tarea: Tarea
    + setTarea(tareaAModificar: Tarea): this
    + setTitulo(titulo: string): this
    + setDescripcion(descripcion: string): this
    + setFechaCreacion(fechaCreacion: Date): this
    + setFechaVencimiento(fechaVencimiento: Date | null): this
    + setFechaFinalizacion(fechaFinalizacion: Date | null): this
    + setPrioridad(prioridad: prioridad | null): this
    + setCompletado(completado: boolean): this
    + setPorcentajeAvance(porcentaje: number): this
    + setCategoria(categoria: categoria | null): this
    + setEtiquetas(etiquetas: string[]): this
    + agregarEtiqueta(etiqueta: string): this
    + borrarEtiqueta(etiqueta: string): this
}

enum prioridad #LightSalmon;header:444{
    baja,
    media,
    alta
}

enum categorias #LightSalmon;header:444{
    Trabajo,
    Personal,
    Familia,
    Estudio
}
class ToDoLista #TECHNOLOGY;header:444 {
    - listaTareas: Tarea[];
    - listaTareasCompletadas: Tarea[];
    - listaTareasPendientes: Tarea[];
    + agregarAListas(tarea: Tarea): void;
    + borrarDeListas(titulo: string): void;
    + borrarPorTitulo(titulo: string): void;
    + getTareaDeLista(titulo: string): Tarea | undefined;
    + getListaTareas(): Tarea[];
    + getTareasCompletadas(): Tarea[];
    + getTareasPendientes(): Tarea[];
    + getTarea(titulo: string): Tarea;
    + setListaTareas(listaTareas: Tarea[]): void;
    + setListaTareasCompletadas(): void;
    + setListaTareasPendientes(): void;
}

interface Busqueda #Thistle;header:444{
    buscar(tareas: Tarea[], parametro: any): Tarea[];
}

class BusquedaPorEtiqueta #TECHNOLOGY;header:444 implements Busqueda{
    + buscar(tareas: Tarea[], etiqueta: string): Tarea[];
}

class BusquedaPorTitulo #TECHNOLOGY;header:444 implements Busqueda{
    + buscar(tareas: Tarea[], titulo: string): Tarea[];
}


class BusquedaPorVencimiento #TECHNOLOGY;header:444 implements Busqueda{
    + buscar(tareas: Tarea[], fecha: Date): Tarea[];
}


class CalculadoraEstadistica #TECHNOLOGY;header:444 {
    - numeroTareasCompletadas: number;
    - numeroTareasTotales: number;
    - listadoTIempoDedicadoXTarea: map<Tarea, number>;
    + calcularTasa(listaTareas: ToDoLista): number;
    + calcularTiempoDedicado(listaTareas: ToDoLista):map<Tarea, number>;
}

class Persistencia #TECHNOLOGY;header:444 {
    + constructorTarea: ConstructorTarea;
    + lista: ToDoLista;
    + director: Director;
    + async obtenerBaseDeDatos(): void;
    + async guardarBaseDeDatos(data: string): void ;
}

interface Ordenamiento #Thistle;header:444{
    ordenar(tarea: Tarea[], ascendente: boolean): Tarea[];
}

class OrdenPorEtiquetas #TECHNOLOGY;header:444 implements Ordenamiento {
    + ordenar(tarea: Tarea[], ascendente: boolean): Tarea[]
}

class OrdenPorFecha #TECHNOLOGY;header:444 implements Ordenamiento{
    + ordenar(tarea: Tarea[], ascendente: boolean): Tarea[]
}

class OrdenPorPrioridad #TECHNOLOGY;header:444 implements Ordenamiento{
    + ordenar(tarea: Tarea[], ascendente: boolean): Tarea[]
}


class OrdenPorTitulo #TECHNOLOGY;header:444 implements Ordenamiento{
    + ordenar(tarea: Tarea[], ascendente: boolean): Tarea[]
}

exception tareaInexistenteError #LightCoral;header:444{}

exception EtiquetaInexistenteError #LightCoral;header:444{}



'relaciones
    skinparam ranksep 100
'cambia el largo de las flechas
    skinparam nodesep 100
'cambia la distancia entre los cuadrados
    categorias .r.> Tarea::categoria
    Tarea .u.> ConstructorTarea
    Tarea ..* ToDoLista
    prioridad .l.> Tarea::prioridad
    Tarea::borrarEtiqueta <.r. EtiquetaInexistenteError
    ToDoLista::borrarDeLista <.l. tareaInexistenteError
    ToDoLista::borrarPorTitulo <.l. tareaInexistenteError
    ToDoLista .d.> CalculadoraEstadistica
    ToDoLista .d.> Busqueda
    ToDoLista .d.> Ordenamiento
    ToDoLista .d.> Persistencia
    Director .r.> Builder
    ModificadorTarea .r.> Tarea
'notas
'dise√±o
        'colores de clases
            /'
            clase: #TECHNOLOGY;header:444
            clase: abstracta #LightCyan;header:444
            interfaz: #Thistle;header:444
            enums: #LightSalmon;header:444
            excepciones: #LightCoral;header:444
            '/
            skinparam roundcorner 20
        'cambia las esquinas de las clases para hacerlas mas redondeadas
            skinparam classFontColor automatic
        'cambia el color de fuente de todas las clases asi se ve en blanco sobre el fondo oscuro
    @enduml