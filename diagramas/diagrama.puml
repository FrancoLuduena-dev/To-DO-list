@startuml diagrama clases
title TO DO list

interface Builder #Thistle;header:444{
    setTitulo(titulo: string): void;
    setDescripcion(descripcion: string): void;
    setFechaVencimiento(fechaVencimiento: Date): void;
    setPrioridad(prioridad: prioridad): void;
    setCategoria(categoria: categoria): void;
    setEtiquetas(etiquetas: string[]): void;
    construirTarea(): void;
}

class Tarea #TECHNOLOGY;header:444{
    - titulo: string;
    - descripcion: string;
    - fechaVencimiento: date| null;
    - fechaCreacion: date;
    - fechaFinalizacion: date | null;
    - prioridad: prioridad | null ;
    - completado: boolean;
    - porcentajeAvance: number;
    - categoria: categoria | null;
    - etiqueta: string;
    + setters()
    + getters()
    + agregarEtiqueta(): void;
    + borrarEtiqueta(): void;
}

class ConstructorTarea #TECHNOLOGY;header:444 implements Builder {
    - tarea: Tarea;
    +reset(): void ;
    +setTitulo(titulo: string): this ;
    +setDescripcion(descripcion: string): this ;
    +setFechaVencimiento(fechaVencimiento: Date): this ;
    +setPrioridad(prioridad: prioridad): this ;
    +setCompletado(completado: boolean): this ;
    +setPorcentajeAvance(porcentajeAvance: number): this ;
    +setCategoria(categoria: categoria)v ;
    +setEtiquetas(etiqueta: string): this ;
    +construirTarea(): Tarea;
}

class Director #TECHNOLOGY;header:444{
    -builder: constructorTarea ;
    -lista: ToDoLista;
    +setBuilder(): void ;
    +construirTareaCompleta(): Tarea;
}

enum prioridad #LightSalmon;header:444{
    baja,
    media,
    alta
    }

enum categorias #LightSalmon;header:444{
    Trabajo,
    Personal,
    Familia,
    Estudio
}

class ToDoLista #TECHNOLOGY;header:444{
    - listaTareas[]: tarea[] ;
    + agregarALista(): void;
    + getTareaDeLista(): Tarea;
    + borrarDeLista(): void;
    + borrarPorTitulo(): void;
    + modificares de parametros()
    ' NO SE SI SON NECESARIOS ESTOS, PUEDE TOMARLOS DEL GENERAL
}

class Busqueda #TECHNOLOGY;header:444{
    + buscarPorTitulo(): tarea;
    + buscarPorFechaVencimiento(): tarea;
    + buscarPorEtiquetas(): tarea;
}

class Ordenamiento #TECHNOLOGY;header:444{
    - listadoOrdenado[]: tarea;
    + ordenarPorTitulo(): void;
    + ordenarPorFecha(): void;
    + ordenarPorPrioridad(): void;
}

class CalculadoraEstadistica #TECHNOLOGY;header:444{
    - TasaFinalizacion: number;
    - numeroTareasCompletadas: number;
    - numeroTareasTotales: number;
    - listadoTiempoDedicadoXtarea[<tarea><tiempo>]: number;
    'esto serviria si hacemos algunas estadisticas que sean algo asi como "promedio de tiempo para resolucion de tareas", o "tiempo dedicado a X categoria / etiqueta", sino yo pondria
    - TiempoDedicadoATareas: number;
    'este simplemente sumaria el tiempo desde la creacion de la tarea hasta ahora. Tambien se puede separar en tiempo dedicado a teareas completadas y tiempo dedicado a tareas no completadas
    + calcularTasa(): number;
    + calcularTiempoDedicado(): number;
}

class Persistencia #TECHNOLOGY;header:444{
    + guardarJSON();
    + leer();
}

exception tareaInexistenteError #LightCoral;header:444{}

exception EtiquetaInexistenteError #LightCoral;header:444{}

'relaciones
    skinparam ranksep 100
    'cambia el largo de las flechas
    skinparam nodesep 100
    'cambia la distancia entre los cuadrados

    
    categorias .r.> Tarea::categoria
    Tarea .u.> ConstructorTarea
    Tarea ..* ToDoLista
    prioridad .l.> Tarea::prioridad
    Tarea::borrarEtiqueta <.r. EtiquetaInexistenteError
    ToDoLista::borrarDeLista <.l. tareaInexistenteError
    ToDoLista::borrarPorTitulo <.l. tareaInexistenteError
    ToDoLista .d.> CalculadoraEstadistica
    ToDoLista .d.> Busqueda
    ToDoLista .d.> Ordenamiento
    ToDoLista .d.> Persistencia
    Director ..> Builder

'notas
    'dise√±o
        'colores de clases
        /'
        clase: #TECHNOLOGY;header:444
        clase: abstracta #LightCyan;header:444
        interfaz: #Thistle;header:444
        enums: #LightSalmon;header:444
        excepciones: #LightCoral;header:444
        '/
    skinparam roundcorner 20
    'cambia las esquinas de las clases para hacerlas mas redondeadas
    skinparam classFontColor automatic
    'cambia el color de fuente de todas las clases asi se ve en blanco sobre el fondo oscuro

@enduml