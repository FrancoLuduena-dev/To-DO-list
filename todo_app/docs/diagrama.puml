@startuml diagrama

abstract class toDoList{
    -listaTareas[]: tarea;
    -listaTareasCompletadas[]: tarea;
    -listaTareasPendientes[]: tarea;
    +getters_setters
}

class tarea extends toDoList{
    -titulo: string;
    -descripcion: string;
    -fechaVencimiento: number;
    -prioridad: char;
    -etiqueta: string;
    -completado: boolean;
    -porcentajeAvance: number;
    +setters()
    +getters()
}

class categorizado {
    -categoria: string;
    -listaTareasXCategoria[<tarea><categoria>]: tarea;
    +setCategoria();
}

class administrarTareas {
    +addTarea();
    +borrarTarea();
}

interface busqueda{
    +buscarPorTitulo(): tarea;
    +buscarPorFechaVencimiento(): tarea;
}

interface ordenamiento{
    -listadoOrdenado[]: tarea;
    +ordenarPorTitulo(): void;
    +ordenarPorFecha(): void;
    +ordenarPorPrioridad(): void;
}

interface calculadoraEstadistica{
    -listadoTasaFinalizacion[]: number;
    -listadoTiempoDedicadoXtarea[<tarea><tiempo>]: number;
    +calcularTasa(): number;
    +calcularTiempoDedicado(): number;
}

interface persistencia{
    logica para que persistan los datos del programa;
}

tarea *.r. categorizado
tarea *.. administrarTareas
tarea ..> calculadoraEstadistica
tarea ..> busqueda
tarea .l.> ordenamiento
toDoList ..> persistencia


@enduml